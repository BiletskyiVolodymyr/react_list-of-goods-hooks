{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","React","useState","sortList","setSortList","isReversed","setIsReversed","makeSetSortList","field","sortGoods","goods","preparedGoods","sort","good1","good2","alphabet","localeCompare","length","reverse","getPreparedGoods","className","type","cn","onClick","prevState","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,mFAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,gBAAAA,E,qBAAAA,M,KAkCE,IAAME,EAAgB,WAC3B,MAAgCC,IAAMC,SAAS,IAA/C,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCH,IAAMC,UAAS,GAAnD,mBAAOG,EAAP,KAAmBC,EAAnB,KAOMC,EAAkB,SAACC,GAAD,OAAqB,kBAAMJ,EAAYI,KAEzDC,EAxCR,SACEC,EACAP,EACAE,GAEA,IAAMM,EAAsB,YAAOD,GAqBnC,OAnBIP,GACFQ,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQX,GACN,KAAKL,EAASiB,SACZ,OAAOF,EAAMG,cAAcF,GAE7B,KAAKhB,EAASmB,OACZ,OAAOJ,EAAMI,OAASH,EAAMG,OAE9B,QACE,OAAO,MAKXZ,GACFM,EAAcO,UAGTP,EAcWQ,CAAiBpB,EAAiBI,EAAUE,GAE9D,OACE,sBAAKe,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAoBE,IAAG,CAAE,WAAYnB,IAAaL,EAASiB,YACpEQ,QAAShB,EAAgBT,EAASiB,UAHpC,iCAQA,wBACEM,KAAK,SACLD,UAAS,4BAAuBE,IAAG,CAAE,WAAYnB,IAAaL,EAASmB,UACvEM,QAAShB,EAAgBT,EAASmB,QAHpC,4BAQA,wBACEI,KAAK,SACLD,UAAS,4BAAuBE,IAAG,CAAE,YAAajB,KAClDkB,QAAS,kBAAMjB,GAAc,SAAAkB,GAAS,OAAKA,MAH7C,sBAQErB,GAAYE,IACZ,wBACEkB,QAtCI,WACZnB,EAAY,IACZE,GAAc,IAqCNe,KAAK,SACLD,UAAU,4BAHZ,sBAUJ,6BACGX,EAAUgB,KAAI,SAAAC,GAAI,OAAI,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YCrGvDC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b8ac29ab.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  length = 'length',\n  alphabet = 'alphabet',\n}\n\nfunction getPreparedGoods(\n  goods: string[],\n  sortList: string,\n  isReversed: boolean,\n):string[] {\n  const preparedGoods:string[] = [...goods];\n\n  if (sortList) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortList) {\n        case SortType.alphabet:\n          return good1.localeCompare(good2);\n\n        case SortType.length:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortList, setSortList] = React.useState('');\n  const [isReversed, setIsReversed] = React.useState(false);\n\n  const reset = () => {\n    setSortList('');\n    setIsReversed(false);\n  };\n\n  const makeSetSortList = (field: SortType) => () => setSortList(field);\n\n  const sortGoods = getPreparedGoods(goodsFromServer, sortList, isReversed);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button is-info ${cn({ 'is-light': sortList !== SortType.alphabet })}`}\n          onClick={makeSetSortList(SortType.alphabet)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-success ${cn({ 'is-light': sortList !== SortType.length })}`}\n          onClick={makeSetSortList(SortType.length)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-warning ${cn({ 'is-light': !isReversed })}`}\n          onClick={() => setIsReversed(prevState => !prevState)}\n        >\n          Reverse\n        </button>\n\n        {(sortList || isReversed) && (\n          <button\n            onClick={reset}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {sortGoods.map(good => <li data-cy=\"Good\" key={good}>{good}</li>)}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}